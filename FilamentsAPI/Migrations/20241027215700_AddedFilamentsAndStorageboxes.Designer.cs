// <auto-generated />
using System;
using FilamentsAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilamentsAPI.Migrations
{
    [DbContext(typeof(FilamentsAPIDbContext))]
    [Migration("20241027215700_AddedFilamentsAndStorageboxes")]
    partial class AddedFilamentsAndStorageboxes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AccountEntityAclEntity", b =>
                {
                    b.Property<int>("ACLsId")
                        .HasColumnType("int");

                    b.Property<int>("AccountsId")
                        .HasColumnType("int");

                    b.HasKey("ACLsId", "AccountsId");

                    b.HasIndex("AccountsId");

                    b.ToTable("AccountEntityAclEntity");
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.AccountEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SaltedPasswordHash")
                        .IsRequired()
                        .HasMaxLength(72)
                        .HasColumnType("varchar(72)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.AclEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ACLs");
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.CsSetting", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("JsonValue")
                        .HasColumnType("longtext");

                    b.HasKey("Name");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.FilamentEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("FirstAdded")
                        .HasColumnType("datetime");

                    b.Property<int>("InitialWeight")
                        .HasColumnType("int");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhotoID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PricePerKG")
                        .HasColumnType("double");

                    b.Property<int?>("StorageBoxId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StorageBoxId");

                    b.ToTable("Filaments");
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.StorageboxEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("LastDessicantChange")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhotoID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Storageboxes");
                });

            modelBuilder.Entity("AccountEntityAclEntity", b =>
                {
                    b.HasOne("FilamentsAPI.Persistence.AclEntity", null)
                        .WithMany()
                        .HasForeignKey("ACLsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilamentsAPI.Persistence.AccountEntity", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.FilamentEntity", b =>
                {
                    b.HasOne("FilamentsAPI.Persistence.StorageboxEntity", "StorageBox")
                        .WithMany("Filaments")
                        .HasForeignKey("StorageBoxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("StorageBox");
                });

            modelBuilder.Entity("FilamentsAPI.Persistence.StorageboxEntity", b =>
                {
                    b.Navigation("Filaments");
                });
#pragma warning restore 612, 618
        }
    }
}
